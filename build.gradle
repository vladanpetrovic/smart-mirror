buildscript {
    ext.springRepo = 'http://repo.spring.io/libs-release'
    repositories {
        mavenCentral()
        maven { url springReleaseRepo }
        maven { url springSnapshotRepo }
        maven { url springMilestoneRepo }
        maven { url 'http://repo.spring.io/plugins-release' }
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath 'com.moowork.gradle:gradle-node-plugin:1.2.0'
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
        classpath 'io.spring.gradle:dependency-management-plugin:1.0.4.RELEASE'
        classpath 'org.springframework.build.gradle:propdeps-plugin:0.0.7'
        classpath 'gradle.plugin.org.unbroken-dome.gradle-plugins:gradle-testsets-plugin:1.3.2'
        classpath 'com.avast.gradle:gradle-docker-compose-plugin:0.6.9'
    }
}

def vJavaLang = '1.8'

def nodeProjects = [
        project(':neatlicity-client:device:smart-mirror'),
        project(':neatlicity-client:mobile'),
        project(':neatlicity-client:shared:api-client')
]
def bootProjects = [
    project(':neatlicity-service:api:user'),
    project(':neatlicity-service:api:todo'),
    project(':neatlicity-service:api:remainder'),
    project(':neatlicity-service:api:weather')
]
def springProjects = bootProjects + [
    project(':neatlicity-service:api-gateway')
]
def javaProjects = springProjects

def gradleDir = "${rootProject.rootDir}/gradle"

wrapper.gradleVersion = '4.1'

configure(allprojects) {
    apply plugin: 'idea'
    apply plugin: 'eclipse'
}

configure(nodeProjects) {
    apply plugin: "com.moowork.node"

    node {
        version = '9.3.0'
        npmVersion = '5.6.0'
        download = true
    }
}

configure(javaProjects) {
    apply plugin: 'java'
    apply from: "${gradleDir}/testing.gradle"
    apply from: "${gradleDir}/codeCoverage.gradle"
    apply from: "${gradleDir}/staticCodeAnalysis.gradle"

    targetCompatibility = vJavaLang
    sourceCompatibility = vJavaLang
}

configure(springProjects) {
    apply plugin: 'io.spring.dependency-management'

    repositories {
        mavenCentral()
        maven { url springReleaseRepo }
        maven { url springSnapshotRepo }
        maven { url springMilestoneRepo }
    }

    dependencies {
        compile 'org.projectlombok:lombok'
        compile 'org.slf4j:slf4j-api'
        testCompile 'junit:junit'
        testCompile 'org.hamcrest:hamcrest-library'
        testCompile 'org.mockito:mockito-core'
        testCompile 'org.objenesis:objenesis'
    }
}

configure(bootProjects) {
    apply plugin: 'org.springframework.boot'

    group = 'com.neatlicity.service'

    dependencies {
        compile 'org.springframework.boot:spring-boot-starter'
        compile 'org.springframework.boot:spring-boot-starter-actuator'

        runtime 'org.springframework.boot:spring-boot-devtools'
        testCompile 'org.springframework.boot:spring-boot-starter-test'
        testCompile 'io.projectreactor:reactor-test'
    }
}